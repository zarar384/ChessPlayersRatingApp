@using ChessPlayersRatingApp.Data
@model IEnumerable<ChessPlayersRatingApp.Models.Information>

@{
    ViewData["Title"] = "Info";
    AppDbContext db = new AppDbContext();
}

<div class="text-center">
    <h1 class="display-4">Information</h1>
    <p>about chess players</p>
</div>
<div class="container p-3">
    <div class="row p-4">
        <div class="col p-6">
            <h2 class="text-primary">Information List</h2>
        </div>
        <div class="col-6 text-right">
            <a class="btn btn-primary" asp-action="Upsert">
                <i class="fa-solid fa-plus"></i>&nbsp;
                Create New Product
            </a>
        </div>
    </div>
    <br /><br />

    @if (Model.Count() > 0)
    {
        <table class="table table-bordered table-striped" style="width:100%">
            <thead>
                <tr>
                    <th>
                        Name
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var obj in Model)
                {

                    <tr>
                        <td width="30%">
                            @db.Players.Where(x=>x.Id == obj.PlayerId).FirstOrDefault().Name
                        </td>
                        <td align="right">
                            <a asp-route-Id="@obj.PlayerId" asp-action="Upsert" class="btn btn-primary">
                                <i class="fa-solid fa-pen-to-square"></i>
                            </a> |
                            <a asp-route-Id="@obj.Id" asp-action="Delete" class="btn btn-danger">
                                <i class="fa-solid fa-ban"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No information exists</p>
    }

</div>
